# -*- coding: utf-8 -*-
"""python_notebook.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kK-x802jVcucVoFp71Qoh-jWkwYIDkGC
"""

import pandas as pd
import seaborn as sns
import numpy as np
import warnings 
warnings.filterwarnings('ignore')
import statsmodels.api as sm
import pylab as plt

regression=pd.read_csv("regression_data.csv", sep= ";")
regression.head()

#Eliminamos la columna 'date' ya que no la utilizaremos en el analisis
regression.drop('date', axis=1, inplace=True)
regression.head(10)

#Mostramos la cantidad de filas 
print('Cantidad de filas: ', regression.shape[0])

#VALORES UNICOS

#Columna 'bedrooms'
regression['bedrooms'].unique()

#Columna 'bathrooms'
regression['bathrooms'].unique()

#Columna 'floors'
regression['floors'].unique()

#Columna 'condition'
regression['condition'].unique()

#Columna 'grade'
regression['grade'].unique()

#Ordenamos los datos en orden decreciente según el precio de la casa. 
regression.sort_values(by='price', ascending=False).head(10)['id'] 
#Mostramso los 10 ids de las casas mÁs caras

#Precio promedio de las casas
regression['price'].mean()

#Utilizamos la funcion 'groupby' 
#Agrupamos los datos por la columna 'bedrooms' y calculamos el promedio de la columna 'price'
regression.groupby('bedrooms')['price'].mean()

#Agrupamos los datos por la columna 'bedrooms' y calculamos el promedio de lacolumna 'sqft_living' 
regression.groupby('bedrooms')['sqft_living'].mean()

#Precio promedio de las casas con 'waterfront'
regression[regression['waterfront']==1]['price'].mean()

#Precio promedio de las casas sin 'waterfront'
regression[regression['waterfront']==0]['price'].mean()

#Observamos si existe alguna correlacion entre las variables 'condition' y 'grade' 
regression[['condition', 'grade']].corr()

#Dibujamos una gráfica para poder observar si hay una correlación positiva o negativa o no hay correlacion
sns.regplot(x='condition', y='grade', data=regression)
print("La grafica que indica el estado de correlacion es la mostrada a continuación.")

print("Observamos que entre ambas variables, 'condition' y 'grade', existe una correlación positiva, por lo que a mayor condición del inmueble, mayor será su calificación. Esto tiene sentido, ya que un inmueble en buenas condiciones tendrá una mejor calificación si lo comparamos con uno en malas condiciones.")

#CASAS POR CONDICIONES

#Cantidad de casas por condicion
regression['condition'].value_counts()

#Cantidad de casas por baños
regression['bathrooms'].value_counts()

#Cantidad de casas por pisos
regression['floors'].value_counts()

#Cantidad de casas por calificacion
regression['grade'].value_counts()

#Cantidad de casas por precio
regression['price'].value_counts()

#Un cliente nos pide que encontremos una casa con las siguientes categorias:

    #3 o 4 habitaciones
    #Más de 3 baños
    #1 planta
    #Sin tenga vistas al lago
    #Tiene que tener por lo menos un 3 de condición
    #La calificacion tiene que ser al menos de un 5
    #El precio tiene que ser menos de 300000

#Creamos una variable que contenga los datos de las casas que cumplen con las condiciones
regression[((regression['bedrooms']==3) | (regression['bedrooms']==4)) &  (regression['bathrooms']>3) &  (regression['floors']==1) & (regression['waterfront']==0) & (regression['condition']>=3) & (regression['grade']>=5) & (regression['price']<300000)]

print("No es posible recomendarle al cliente ninguna casa con las condiciones que ha solicitado, por lo tanto la lista se entrega vacia.")

#Mostramos las casas que su precio es el doble de la media
regression[regression['price']>(regression['price'].mean()*2)]

#Obtenemos la diferencia entre el precio medio de las casas con 3 habitaciones y las casas con 4 habitaciones
regression[regression['bedrooms']==4]['price'].mean() - regression[regression['bedrooms']==3]['price'].mean()

#Mostramos los distintos codigos postales
regression['zipcode'].unique()

#Mostramos las casas que han sido renovadas
regression[regression['yr_renovated']>0]

#Imprimimos los detalles de la 11º casa mas cara del dataset 
regression.sort_values(by='price', ascending=False).head(11).iloc[10]